name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  train-deploy:
    name: Test Training Pipeline
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run training tests
        run: |
          python -m pytest tests/test_training.py -v

      - name: Train model
        run: |
          python -m training.train --epochs 1 --batch_size 16

      - name: Build Docker image
        run: |
          cd deployment
          docker compose build sentiment-api
      
      - name: Start service for testing
        run: |
          cd deployment
          docker compose up -d sentiment-api
          # Wait for service to be ready
          sleep 30
      
      - name: Run serving tests
        run: |
          python -m pytest tests/test_serving.py -v
      
      - name: Test API endpoints
        run: |
          curl -f http://localhost:8000/health

          curl -X POST http://localhost:8000/predict \
            -H "Content-Type: application/json" \
            -d '{"text": "This book was absolutely amazing! I loved every single page. Wow!!"}'
      
      - name: Stop services
        if: always()
        run: |
          cd deployment
          docker compose down
